import{drawSixMonthCalendarGrid}from'./calendar.js';import{loadJSON}from'./dataLoader.js';import{Assistant}from'./assistant.js';let assistant;const state={rooms:{},restricted:{diwali:['2025-10-17','2025-11-02'],christmas:['2025-12-19','2026-01-04'],monsoon:['2025-06-09','2025-10-14']},selection:{roomsByDate:{}},cart:[]};function localISO(d){return`${d.getFullYear()}-${String(d.getMonth()+1).padStart(2,'0')}-${String(d.getDate()).padStart(2,'0')}`}async function init(){const roomList=await loadJSON('data/rooms.json');roomList.forEach(r=>state.rooms[r.id]=r);const totalRooms=Object.keys(state.rooms).length;drawSixMonthCalendarGrid(document.getElementById('calendarGrid'),{restricted:state.restricted,totalRooms,onPickRange:(fromISO,toISO)=>{const from=document.getElementById('fromDate'),to=document.getElementById('toDate');if(from&&to){from.value=fromISO;to.value=toISO}onCheck()}});['mAdults','mSeniors','mKids','mDepend','tAdults','tKids'].forEach(id=>fill(id,10));function fill(id,max){const s=document.getElementById(id);if(!s)return;s.innerHTML='';for(let i=0;i<=max;i++){const o=document.createElement('option');o.value=i;o.textContent=i;s.appendChild(o)}}document.getElementById('checkBtn').addEventListener('click',onCheck);document.getElementById('addToCartBtn').addEventListener('click',addToCart);assistant=new Assistant('assistantOut','micBtn','assistantInput','sendBtn');updateAssistant();window.__filterBlock=filterByBlock}function updateAssistant(){const from=document.getElementById('fromDate')?.value||'—';const to=document.getElementById('toDate')?.value||'—';const nights=computeNights(from,to).length;const selRooms=selectedRoomsFlat();const people=`Members: ${val('mAdults')} • Seniors: ${val('mSeniors')} • ≤10: ${val('mKids')} • 11–21: ${val('mDepend')} • Temp A: ${val('tAdults')} • Temp 5–10: ${val('tKids')}`;assistant.setState({range:`${from} → ${to}`,nights,selectedRooms:selRooms,peopleSummary:people,food:document.getElementById('prefFood').value||''})}function val(id){return Number(document.getElementById(id)?.value||0)}function computeNights(fromISO,toISO){if(!fromISO||!toISO)return[];const start=new Date(fromISO),end=new Date(toISO);if(!(end>start))return[];const out=[];for(let d=new Date(start);d<end;d.setDate(d.getDate()+1)){out.push(localISO(d))}return out}function onCheck(){const from=document.getElementById('fromDate')?.value;const to=document.getElementById('toDate')?.value;const res=document.getElementById('result');res.innerHTML='';const nights=computeNights(from,to);if(!nights.length){res.textContent='Please choose a valid date range.';return}res.innerHTML=`<p>Searching ${nights.length} night(s)…</p>`;listRooms(nights);scrollToRooms();document.getElementById('assignWrap').style.display='none';document.getElementById('assignPanel').innerHTML='';document.getElementById('selectionOut').textContent='No rooms selected yet.';state.selection.roomsByDate={};updateAssistant()}function scrollToRooms(){const el=document.getElementById('roomLists');if(el)el.scrollIntoView({behavior:'smooth',block:'start'})}function getBlockFor(id){const meta=state.rooms[id]||{};let b=(meta.block??'').toString().trim().toUpperCase();if(!b){const m=String(id).match(/[A-Za-z]/);if(m)b=m[0].toUpperCase()}return b||'UNKNOWN'}function groupByBlock(list){const g={};list.forEach(id=>{const b=getBlockFor(id);(g[b]??=[]).push(id)});return g}function renderBlockSummary(freeList){const wrap=document.getElementById('blockSummary');if(!wrap)return;const byBlock=groupByBlock(freeList);const blocks=Object.keys(byBlock).sort();const btn=(b,label)=>`<button class="btn ghost" data-block="${b}" onclick="window.__filterBlock && window.__filterBlock('${b}')">${label}</button>`;wrap.innerHTML=[btn('ALL',`All : ${freeList.length}`),...blocks.map(b=>btn(b,`${b} : ${byBlock[b].length}`))].join(' ')}function filterByBlock(block){scrollToRooms();document.querySelectorAll('#roomLists .card').forEach(div=>{div.querySelectorAll('.room-pill[data-iso][data-id]').forEach(p=>{const id=p.dataset.id;const b=getBlockFor(id);p.style.display=(block==='ALL'||b===block)?'inline-block':'none'})});document.querySelectorAll('[data-block]').forEach(btn=>btn.classList.toggle('active',btn.dataset.block===block))}function listRooms(dates){const roomLists=document.getElementById('roomLists');roomLists.innerHTML='';const all=Object.keys(state.rooms);let lastFree=all.slice();dates.forEach(iso=>{const free=all;lastFree=free;const div=document.createElement('div');div.className='card';div.setAttribute('data-iso',iso);const pill=(iso,id)=>{const block=getBlockFor(id);const ac=(state.rooms[id]?.ac?'AC':'Non-AC');const cap=(state.rooms[id]?.max_persons??2);return `<span class='room-pill' data-iso='${iso}' data-id='${id}' title='Click to select'>${id} • ${block} • ${ac} • cap ${cap}</span>`};div.innerHTML=`<h4>${iso}</h4><div><strong>FREE:</strong> ${free.map(id=>pill(iso,id)).join(' ')||'—'}</div><div style='margin-top:6px'><strong>BOOKED:</strong> —</div>`;roomLists.appendChild(div)});renderBlockSummary(lastFree);return}document.body.addEventListener('click',e=>{const pill=e.target.closest('.room-pill[data-iso][data-id]');if(!pill)return;toggleRoom(pill.dataset.iso,pill.dataset.id);buildAssignPanel();updateAssistant()});function selectedRoomsFlat(){const allDates=Object.keys(state.selection.roomsByDate).sort();const set=new Set();allDates.forEach(d=>(state.selection.roomsByDate[d]||[]).forEach(id=>set.add(id)));return Array.from(set)}function toggleRoom(iso,id){const set=new Set(state.selection.roomsByDate[iso]||[]);if(set.has(id))set.delete(id);else set.add(id);state.selection.roomsByDate[iso]=Array.from(set);document.getElementById('selectionOut').textContent=summarySelection()}function summarySelection(){const nights=Object.keys(state.selection.roomsByDate).sort();if(!nights.length)return'No rooms selected yet.';const parts=nights.map(d=>d+': '+(state.selection.roomsByDate[d]||[]).join(', '));return parts.join('  •  ')}function buildAssignPanel(){const wrap=document.getElementById('assignWrap');const panel=document.getElementById('assignPanel');panel.innerHTML='';const nights=Object.keys(state.selection.roomsByDate).sort();if(!nights.length){wrap.style.display='none';return}wrap.style.display='block';const chosen=selectedRoomsFlat();if(!chosen.length){panel.innerHTML='<em>Select at least one room to assign occupants.</em>';return}const need={memberA:val('mAdults'),seniorA:val('mSeniors'),kidsU10:val('mKids'),depend:val('mDepend'),tempA:val('tAdults'),tempK:val('tKids')};chosen.forEach(id=>{const cap=state.rooms[id]?.max_persons??2;const row=document.createElement('div');row.className='assign-row';row.dataset.room=id;row.innerHTML=`<div><strong>${id}</strong><br><label>cap: ${cap} persons</label>${state.rooms[id]?.groupBookingPermitted?'<br><span class="small">Group booking permitted</span>':''}</div><div><label>Member A</label><input type="number" min="0" max="${cap}" value="0" data-for="${id}" data-k="memberA"></div><div><label>Senior A</label><input type="number" min="0" max="${cap}" value="0" data-for="${id}" data-k="seniorA"></div><div><label>≤10</label><input type="number" min="0" value="0" data-for="${id}" data-k="kidsU10"></div><div><label>11–21</label><input type="number" min="0" value="0" data-for="${id}" data-k="depend"></div><div><label>Temp A</label><input type="number" min="0" value="0" data-for="${id}" data-k="tempA"></div><div><label>Temp 5–10</label><input type="number" min="0" value="0" data-for="${id}" data-k="tempK"></div>`;panel.appendChild(row)});panel.querySelectorAll('input[type="number"]').forEach(inp=>inp.addEventListener('input',updateAssignSummary));autoDistribute(chosen,need);updateAssignSummary();document.getElementById('summaryWrap').style.display='block';renderBookingSummary()}function roomCapacityLeft(id){const cap=state.rooms[id]?.max_persons??2;const row=document.querySelector(`.assign-row[data-room="${id}"]`);const taken=['memberA','seniorA','kidsU10','depend','tempA','tempK'].reduce((s,k)=>s+getBox(row,k),0);return cap-taken}function getBox(row,k){return parseInt(row.querySelector(`input[data-k="${k}"]`).value||'0',10)}function setBox(row,k,val){row.querySelector(`input[data-k="${k}"]`).value=val}function autoDistribute(rooms,need){document.querySelectorAll('.assign-row').forEach(r=>['memberA','seniorA','kidsU10','depend','tempA','tempK'].forEach(k=>setBox(r,k,0)));const sequence=['memberA','seniorA','depend','kidsU10','tempA','tempK'];sequence.forEach(cat=>{let remaining=need[cat];for(const id of rooms){if(remaining<=0)break;const row=document.querySelector(`.assign-row[data-room="${id}"]`);const left=roomCapacityLeft(id);if(left<=0)continue;const put=Math.min(left,remaining);setBox(row,cat,getBox(row,cat)+put);remaining-=put}})}function updateAssignSummary(){const rows=[...document.querySelectorAll('.assign-row')];const totals={memberA:0,seniorA:0,kidsU10:0,depend:0,tempA:0,tempK:0};let ok=true,issues=[];rows.forEach(r=>{const id=r.dataset.room,cap=(state.rooms[id]?.max_persons??2);const counts=['memberA','seniorA','kidsU10','depend','tempA','tempK'].map(k=>getBox(r,k));const sum=counts.reduce((a,b)=>a+b,0);if(sum>cap){ok=false;issues.push(`${id}: ${sum}/${cap}`)}totals.memberA+=counts[0];totals.seniorA+=counts[1];totals.kidsU10+=counts[2];totals.depend+=counts[3];totals.tempA+=counts[4];totals.tempK+=counts[5]});const need={memberA:val('mAdults'),seniorA:val('mSeniors'),kidsU10:val('mKids'),depend:val('mDepend'),tempA:val('tAdults'),tempK:val('tKids')};const lines=[`Need → Members A ${need.memberA}, Seniors ${need.seniorA}, ≤10 ${need.kidsU10}, 11–21 ${need.depend}, Temp A ${need.tempA}, Temp 5–10 ${need.tempK}`,`Assigned → Members A ${totals.memberA}, Seniors ${totals.seniorA}, ≤10 ${totals.kidsU10}, 11–21 ${totals.depend}, Temp A ${totals.tempA}, Temp 5–10 ${totals.tempK}`,ok?"<span style='color:green'>Within per-room capacities.</span>":"<span style='color:#b91c1c'>Over capacity → "+issues.join('; ')+'</span>'"];document.getElementById('assignSummary').innerHTML=lines.join('<br>');renderBookingSummary();updateAssistant()}function renderBookingSummary(){const from=document.getElementById('fromDate')?.value;const to=document.getElementById('toDate')?.value;const nights=computeNights(from,to);const food=document.getElementById('prefFood').value||'(not set)';const roomsByDate=state.selection.roomsByDate;const table=["<table class='summary-table'><thead><tr><th>Date</th><th>Rooms</th></tr></thead><tbody>"];nights.forEach(d=>{const ids=roomsByDate[d]||[];table.push(`<tr><td>${d}</td><td>${ids.join(', ')||'—'}</td></tr>`)});table.push('</tbody></table>');const info=`<p><strong>Dates:</strong> ${from} → ${to} • Nights: ${nights.length}</p><p><strong>Food preference:</strong> ${food} (booking-wide)</p>`;const amount=0;document.getElementById('bookingSummary').innerHTML=info+table.join('')+`<p><strong>Amount (incl. GST):</strong> ₹${amount.toLocaleString()}</p>`}function addToCart(){const from=document.getElementById('fromDate')?.value;const to=document.getElementById('toDate')?.value;const food=document.getElementById('prefFood').value||'';const item={range:`${from} → ${to}`,rooms:selectedRoomsFlat(),people:{memberA:val('mAdults'),seniorA:val('mSeniors'),kidsU10:val('mKids'),depend:val('mDepend'),tempA:val('tAdults'),tempK:val('tKids')},food,amount:0};state.cart.push(item);renderCart();assistant.say('Added to cart. You can proceed to pay when LIVE.')}function renderCart(){const div=document.getElementById('cartPanel');if(!state.cart.length){div.innerHTML='';return}const rows=state.cart.map((it,i)=>`<tr><td>${i+1}</td><td>${it.range}</td><td>${it.rooms.join(', ')}</td><td>${it.food||'—'}</td><td>₹${(it.amount||0).toLocaleString()}</td></tr>`).join('');div.innerHTML=`<h4>Cart</h4><table class='summary-table'><thead><tr><th>#</th><th>Dates</th><th>Rooms</th><th>Food</th><th>Total (incl. GST)</th></tr></thead><tbody>${rows}</tbody></table><div style="margin-top:8px"><button class="btn">Proceed to Pay</button> <span class="small">Payment is disabled in this test build.</span></div>`}init();